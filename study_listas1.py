# -*- coding: utf-8 -*-
"""study_listas1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1NKu9ceoFeArYZ7WZ6IQ6bc88_zrps9W5
"""

print('NY'[int(input())in[i**i+i for i in range(10)]])

from sys import version_info
inf_compra = ""
tel = 0
rut = 0
ver_espacio = 0
nombre_pas = ""
remover_asi = 0
asi_select = 0
inf_pag = 0
desc_banco = 0.85
banco_pasejero = ""
opc_menu = 0
inf_pas = []
lista_asientos = [x for x in range(1,43)]

#verlist
def print_asiento():
 print(f'''
  Representacion de nº asientos
| 1         2          3             4          5          6 |
| 7         8          9            10         11         12 |
| 13        14         15           16         17         18 |
| 19        20         21           22         23         24 |
| 25        26         27           28         29         30 |
|                                                            |
|_________________________         __________________________|
|_________________________   VIP   __________________________|
| 31        32         33           34         35         36 |
|                                                            |
|                                                            |
| 37        38         39           40         41         42 |


Estos son los nº asientos disponibles
''')
#vermenu
def print_menu():
 print(f'''
{"-"*40}
{"Compra de vuelos".center(40)}
{"-"*40}

Opcion De Vuelos:

1) 	Ver asientos disponibles
2)	Comprar asiento
3)	Anular vuelo
4)	Modificar datos de pasajero
5)	Salir
''')
#compra asi
def asiento_compra():
  if "X" in lista_asientos:
    print("solo un asiento por persona")
  else:
    asi_select = input("Seleccione un asiento: ")
    while not int(asi_select) in lista_asientos:
      print("El asiento esta ocupado")
      asi_select = input("Seleccione un asiento: ")
    while not asi_select.isnumeric or int(asi_select) < 1 and int(asi_select) > 42:
      asi_select = input("Seleccione un asiento: ")
    asi_select = int(asi_select)
    nombre_pas = input("indique nombre: ").capitalize()
    ver_espacio = len(nombre_pas)
    while nombre_pas.isnumeric() or ver_espacio <= 0:
      nombre_pas = input("indique nombre: ").capitalize()
      ver_espacio = len(nombre_pas)
    banco_pasejero = input("indique banco: ").upper().replace(" ","")
    ver_espacio = len(banco_pasejero)
    while banco_pasejero.isnumeric() or ver_espacio <= 0:
      banco_pasejero = input("indique banco: ").upper().replace(" ","")
      ver_espacio = len(banco_pasejero)
    if banco_pasejero.upper() == "BANCODUOC":
      if asi_select >0 and asi_select <31:
        inf_pag = int(78900 * desc_banco)
      else:
        inf_pag = int(240000 * desc_banco)
    else:
      if asi_select >0 and asi_select <31:
        inf_pag = 78900
      else:
        inf_pag = 240000
    tel = input("indique telefono: ")
    ver_espacio = len(tel)
    while not tel.isnumeric() or ver_espacio != 9:
      tel = input("indique telefono: ")
      ver_espacio = len(tel)
    rut = input("indique rut: ")
    ver_espacio = len(rut)
    while not rut.isnumeric() or ver_espacio != 9:
      rut = input("indique rut: ")
      ver_espacio = len(rut)
    inf_pas.append([asi_select,nombre_pas,banco_pasejero,tel,rut])
    lista_asientos[(asi_select - 1)] = 'X'
    print(f"Datos pasajero: {asi_select,nombre_pas,banco_pasejero,tel,rut}\n\nprecio a pagar: {inf_pag} CLP")

#anularvuelo
def anular_vuelo():
  asi_select = input("Cual es el asiento reservado: ")
  while not asi_select.isnumeric or int(asi_select) < 1 and int(asi_select) > 42:
    asi_select = input("Cual es el asiento reservado: ")
  asi_select = int(asi_select)
  for i in inf_pas:
    if i[0] == asi_select:
      val_asi = True
    else:
      val_asi = False
  if val_asi == True:
    rut = input("indique rut: ")
    ver_espacio = len(rut)
    while not rut.isnumeric() or ver_espacio != 9:
      rut = input("indique rut: ")
      ver_espacio = len(rut)
    for x in inf_pas:
      if x[4] == rut:
        remover_asi = asi_select - 1
        lista_asientos.pop(remover_asi)
        lista_asientos.insert(remover_asi,asi_select)
        inf_pas.clear()
        break
      else:
        print(f"no se pudo encontrar este rut{rut}")
        break
    print(lista_asientos)
    print(inf_pas)
  else:
    input("press enter e intentelo de nuevo....")

#modificar
def modificar_datos():
  if inf_pas != []:
    rut = input("indique rut: ")
    while not rut.isnumeric() or len(rut) != 9:
      rut = input("indique rut: ")
    for x in inf_pas:
      if x[4] == rut:
        print(f'''
        {inf_pas}
        {"-"*40}
        {"Seleccione datos a cambiar".center(40)}
        {"-"*40}
        {"1)Nombre".center(10)}
        {"2)Telefono".center(12)}
        {"3)Salir".center(10)}
        ''')
        opc_menu = input("ingrese valor: ")
        while not opc_menu.isnumeric() or int(opc_menu) <= 0 or int(opc_menu) >= 4 :
          opc_menu = input("Seleccione una opcion VALIDA: ")
        if int(opc_menu) == 1:
          nombre_pas = input("indique nombre: ").capitalize()
          ver_espacio = len(nombre_pas)
          while nombre_pas.isnumeric() or ver_espacio <= 0:
            nombre_pas = input("indique nombre: ").capitalize()
            ver_espacio = len(nombre_pas)

          x[1] = nombre_pas
          print(inf_pas)

        elif int(opc_menu) == 2:
          tel = input("indique telefono: ")
          while not tel.isnumeric() or len(tel) != 9:
            tel = input("indique telefono: ")

          x[3] = tel
          print(inf_pas)

        elif int(opc_menu) == 3:
          print("Volviendo al menu principal")
          break
      else:
        print("rut invalido")
  else:
    print("No ha comprado")
#menu
while True:
  print_menu()
  opc_menu = input("Seleccione una opcion: ")
  while not opc_menu.isnumeric() or int(opc_menu) <= 0 or int(opc_menu) >= 6 :
    opc_menu = input("Seleccione una opcion VALIDA: ")
  if int(opc_menu) == 1 :
    print_asiento()
    for i in range(0,len(lista_asientos),6):
      print(lista_asientos[i:i+6] , "\n")
  elif int(opc_menu) == 2 :
    asiento_compra()
  elif int(opc_menu) == 3 :
    anular_vuelo()
  elif int(opc_menu) == 4 :
    modificar_datos()
  elif int(opc_menu) == 5 :
    print("adios")
    break

nombre_pas = input("indique nombre: ").capitalize()
  ver_nom = len(nombre_pas)
  while nombre_pas.isnumeric() or ver_nom <= 0:
    nombre_pas = input("indique nombre: ").capitalize()
    ver_nom = len(nombre_pas)

nombre_pasajero = input("Ingrese nombre del pasajero: ").capitalize()
while nombre_pasajero.isdigit() or nombre_pasajero == "":
  nombre_pasajero = input("Ingrese nombre del pasajero VALIDO: ").capitalize()

from sys import version_info
dir(version_info)

banco_pasejero = input("indique banco: ").upper().replace(" ","")
ver_espacio = len(banco_pasejero)
while banco_pasejero.isnumeric() or ver_espacio <= 0:
  banco_pasejero = input("indique banco: ").upper().replace(" ","")
  ver_espacio = len(banco_pasejero)
print(banco_pasejero)

#apuntes
for i in range(1,43):
  lista_asientos.append(i)
lista_asientos = [i for i in range(1, 43)]
for i in range(1,len(lista_asientos),6):
  lista_asientos[i:i+3]
lista_asientos.remove(remover_asi)
lista_asientos.insert(remover_asi, "X")
remover_asi = lista_asientos.index(asi_select)

mi_lista = [[1, 'sdasd', 34], [56, 'fdgasd', 78]]

# Eliminar las sublistas que contengan el número 34
mi_lista = [sublista for sublista in mi_lista if 34 not in sublista]

print(mi_lista)

# Lista con sublistas
lista_principal = [[1, 2, 3], [4, 5, 6], [7, 8, 9], [10, 11, 12]]

# Buscar y eliminar la sublista que contiene el número 9
for sublista in lista_principal:
    if 9 in sublista:
        lista_principal.remove(sublista)
        break  # Para detener el bucle después de eliminar la primera aparición

# Imprimir la lista actualizada
print(lista_principal)